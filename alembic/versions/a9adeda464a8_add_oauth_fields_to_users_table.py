"""Add OAuth fields to users table

Revision ID: a9adeda464a8
Revises: 02a53c506ed7
Create Date: 2025-09-04 21:06:39.419096

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import geoalchemy2
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a9adeda464a8'
down_revision: Union[str, None] = '02a53c506ed7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('exclusion_ranges', 'start_time_seconds',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='seconds from activity start',
               existing_nullable=False)
    op.alter_column('exclusion_ranges', 'end_time_seconds',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='seconds from activity start',
               existing_nullable=False)
    op.alter_column('exclusion_ranges', 'reason',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='user-provided reason',
               existing_nullable=True)
    op.alter_column('exclusion_ranges', 'exclusion_type',
               existing_type=sa.VARCHAR(length=20),
               comment=None,
               existing_comment='user_range, auto_point, user_point (future)',
               existing_nullable=False)
    op.alter_column('exclusion_ranges', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.create_index(op.f('ix_exclusion_ranges_id'), 'exclusion_ranges', ['id'], unique=False)
    op.add_column('users', sa.Column('google_id', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('is_approved', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('approved_by', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('approved_at', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_users_google_id'), 'users', ['google_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_google_id'), table_name='users')
    op.drop_column('users', 'approved_at')
    op.drop_column('users', 'approved_by')
    op.drop_column('users', 'is_approved')
    op.drop_column('users', 'google_id')
    op.drop_index(op.f('ix_exclusion_ranges_id'), table_name='exclusion_ranges')
    op.alter_column('exclusion_ranges', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('exclusion_ranges', 'exclusion_type',
               existing_type=sa.VARCHAR(length=20),
               comment='user_range, auto_point, user_point (future)',
               existing_nullable=False)
    op.alter_column('exclusion_ranges', 'reason',
               existing_type=sa.VARCHAR(length=100),
               comment='user-provided reason',
               existing_nullable=True)
    op.alter_column('exclusion_ranges', 'end_time_seconds',
               existing_type=sa.INTEGER(),
               comment='seconds from activity start',
               existing_nullable=False)
    op.alter_column('exclusion_ranges', 'start_time_seconds',
               existing_type=sa.INTEGER(),
               comment='seconds from activity start',
               existing_nullable=False)
    # ### end Alembic commands ###